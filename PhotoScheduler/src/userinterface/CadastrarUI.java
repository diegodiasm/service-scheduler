/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import controller.CPFFormatter;
import controller.Controller;
import controller.FieldSizeLimiter;
import controller.TimeFormatter;
import java.awt.Dimension;
import java.awt.Event;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Date;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.text.PlainDocument;
import model.Agendamento;
import model.Connector;

/**
 *
 * @author Diego Dias
 */
@SuppressWarnings("serial")
public class CadastrarUI extends javax.swing.JFrame {

    /**
     * @return the con
     */
    public static Connector getCon() {
        return con;
    }

    /**
     * @param aCon the con to set
     */
    public static void setCon(Connector aCon) {
        con = aCon;
    }

    /**
     * Creates new form CadastrarUI
     */
    public CadastrarUI(Connector con) {

        Controller ctrl = Controller.getInstance();
        ResultSet rs = null;

        setCon(con);
        initComponents();

        ctrl.frAnyFrameSetIconImage(this);
        setLocationRelativeTo(null);
        // Artificio para validar texto digitado no ComboBox
        tfTime = (JTextField) cbHorario.getEditor().getEditorComponent();
        docTIME.setDocumentFilter(new TimeFormatter());
        tfTime.setDocument(docTIME);
        // Artificio para manter largura do CbHorario constante
        tfTime.setColumns(0);
        // Artificio para inserir pontuacao no CPF
        docCPF.setDocumentFilter(new CPFFormatter());
        chbPrioritario.setVisible(false);
        tfNome.requestFocus();
        ctrl.frCadastrarUIupdateCbMaquina(this);
        ctrl.frCadastrarUICheckPermission(this);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfTime = new javax.swing.JTextField();
        jpPrincipal = new javax.swing.JPanel();
        jpCampos = new javax.swing.JPanel();
        lbNome = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        lbCPF = new javax.swing.JLabel();
        lbTelefone = new javax.swing.JLabel();
        cbHorario = new javax.swing.JComboBox();
        cbMaquina = new javax.swing.JComboBox();
        dcDataAgendamento = new datechooser.beans.DateChooserCombo();
        lbHorario = new javax.swing.JLabel();
        lbMaquina = new javax.swing.JLabel();
        lbData = new javax.swing.JLabel();
        tfTelefone = new javax.swing.JTextField();
        tfCPF = new javax.swing.JTextField();
        chbPrioritario = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jpBotoes = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btMenuPrincipal = new javax.swing.JButton();
        lbHorarioIndisponivel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PhotoScheduler - Cadastramento");

        jpPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbNome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbNome.setLabelFor(tfNome);
        lbNome.setText("Nome:");

        tfNome.setDocument(new FieldSizeLimiter(80, "[\\D]", true));
        tfNome.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tfNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNomeFocusLost(evt);
            }
        });
        tfNome.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tfNomeInputMethodTextChanged(evt);
            }
        });
        tfNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNomeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNomeKeyTyped(evt);
            }
        });

        lbCPF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbCPF.setLabelFor(tfCPF);
        lbCPF.setText("CPF:");

        lbTelefone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbTelefone.setLabelFor(tfTelefone);
        lbTelefone.setText("Telefone:");

        cbHorario.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbHorario.setPrototypeDisplayValue("00:00");
        cbHorario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbHorarioItemStateChanged(evt);
            }
        });
        cbHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHorarioActionPerformed(evt);
            }
        });
        cbHorario.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                cbHorarioCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        cbHorario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbHorarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbHorarioKeyTyped(evt);
            }
        });

        cbMaquina.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbMaquina.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMaquinaItemStateChanged(evt);
            }
        });
        cbMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaquinaActionPerformed(evt);
            }
        });
        cbMaquina.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbMaquinaPropertyChange(evt);
            }
        });

        dcDataAgendamento.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dcDataAgendamento.setCalendarPreferredSize(new java.awt.Dimension(220, 159));
    dcDataAgendamento.setFormat(2);
    dcDataAgendamento.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 12));
    dcDataAgendamento.setLocale(new java.util.Locale("pt", "BR", ""));
    dcDataAgendamento.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
    dcDataAgendamento.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
        public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
            dcDataAgendamentoOnSelectionChange(evt);
        }
    });

    lbHorario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    lbHorario.setLabelFor(cbHorario);
    lbHorario.setText("Horário:");

    lbMaquina.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    lbMaquina.setLabelFor(cbMaquina);
    lbMaquina.setText("Atendente:");

    lbData.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    lbData.setText("Data");

    tfTelefone.setDocument(new FieldSizeLimiter(12,"[0-9]",false));
    tfTelefone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    tfTelefone.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfTelefoneActionPerformed(evt);
        }
    });

    tfCPF.setDocument(docCPF);
    tfCPF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    tfCPF.setInputVerifier(inpvCPF);
    tfCPF.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tfCPFMouseClicked(evt);
        }
    });
    tfCPF.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            tfCPFKeyPressed(evt);
        }
    });

    chbPrioritario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    chbPrioritario.setText("Prioritário");
    chbPrioritario.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            chbPrioritarioActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jpCamposLayout = new javax.swing.GroupLayout(jpCampos);
    jpCampos.setLayout(jpCamposLayout);
    jpCamposLayout.setHorizontalGroup(
        jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jpCamposLayout.createSequentialGroup()
            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lbNome, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lbCPF, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lbTelefone, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lbHorario, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lbMaquina, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lbData, javax.swing.GroupLayout.Alignment.TRAILING))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tfNome)
                .addComponent(tfTelefone)
                .addComponent(tfCPF)
                .addGroup(jpCamposLayout.createSequentialGroup()
                    .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCamposLayout.createSequentialGroup()
                    .addComponent(dcDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chbPrioritario)))
            .addContainerGap())
    );
    jpCamposLayout.setVerticalGroup(
        jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jpCamposLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(dcDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lbData)
                .addComponent(chbPrioritario))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cbMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lbMaquina))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cbHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lbHorario))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lbNome)
                .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lbCPF)
                .addComponent(tfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
            .addGroup(jpCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lbTelefone)
                .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel1.setText("Cadastramento");

    btSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    btSalvar.setText("Salvar");
    btSalvar.setToolTipText("");
    btSalvar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btSalvarActionPerformed(evt);
        }
    });

    btMenuPrincipal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    btMenuPrincipal.setText("Menu Principal");
    btMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btMenuPrincipalActionPerformed(evt);
        }
    });

    lbHorarioIndisponivel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    lbHorarioIndisponivel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lbHorarioIndisponivel.setToolTipText("");

    javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
    jpBotoes.setLayout(jpBotoesLayout);
    jpBotoesLayout.setHorizontalGroup(
        jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jpBotoesLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
            .addComponent(btMenuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
        .addComponent(lbHorarioIndisponivel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    jpBotoesLayout.setVerticalGroup(
        jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jpBotoesLayout.createSequentialGroup()
            .addComponent(lbHorarioIndisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(4, 4, 4)
            .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btSalvar)
                .addComponent(btMenuPrincipal))
            .addContainerGap(20, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jpPrincipalLayout = new javax.swing.GroupLayout(jpPrincipal);
    jpPrincipal.setLayout(jpPrincipalLayout);
    jpPrincipalLayout.setHorizontalGroup(
        jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jpPrincipalLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPrincipalLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpCampos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jpPrincipalLayout.setVerticalGroup(
        jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jpPrincipalLayout.createSequentialGroup()
            .addGap(24, 24, 24)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jpCampos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 16, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(15, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        Controller ctrl = Controller.getInstance();
        ctrl.frCadastrarUIBtSalvarActionPerformed(this);
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenuPrincipalActionPerformed
        // TODO add your handling code here:
        Controller ctrl = Controller.getInstance();
        ctrl.frCadastrarUIBtMenuPrincipalActionPerformed(this);

    }//GEN-LAST:event_btMenuPrincipalActionPerformed

    private void cbMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaquinaActionPerformed
        Controller ctrl = Controller.getInstance();
        ctrl.frCadastrarUIgetNextAvailableDate(this);
        ctrl.frCadastrarUIupdateCbHorario(this);
    }//GEN-LAST:event_cbMaquinaActionPerformed

    private void cbHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbHorarioActionPerformed

    private void cbMaquinaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMaquinaItemStateChanged
    }//GEN-LAST:event_cbMaquinaItemStateChanged

    private void cbMaquinaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbMaquinaPropertyChange
    }//GEN-LAST:event_cbMaquinaPropertyChange

    private void dcDataAgendamentoOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_dcDataAgendamentoOnSelectionChange
        Controller ctrl = Controller.getInstance();
        ctrl.frCadastrarUIupdateCbHorario(this);
    }//GEN-LAST:event_dcDataAgendamentoOnSelectionChange

    private void tfNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeKeyReleased
    }//GEN-LAST:event_tfNomeKeyReleased

    private void tfNomeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tfNomeInputMethodTextChanged
    }//GEN-LAST:event_tfNomeInputMethodTextChanged

    private void tfNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeKeyTyped
    }//GEN-LAST:event_tfNomeKeyTyped

    private void tfNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomeFocusLost
    }//GEN-LAST:event_tfNomeFocusLost

    private void tfCPFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfCPFMouseClicked
    }//GEN-LAST:event_tfCPFMouseClicked

    private void tfCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCPFKeyPressed
        if (evt.getModifiers() == Event.CTRL_MASK) {
            if (evt.getKeyCode() == KeyEvent.VK_V) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_tfCPFKeyPressed

    private void chbPrioritarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbPrioritarioActionPerformed
        Controller ctrl = Controller.getInstance();

        if (getChbPrioritario().isSelected()) {
            getCbHorario().setEditable(true);
            getCbHorario().repaint();
        } else {
            getCbHorario().setEditable(false);
            ctrl.frCadastrarUIupdateCbHorario(this);
            getCbHorario().repaint();

        }
    }//GEN-LAST:event_chbPrioritarioActionPerformed

    private void cbHorarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbHorarioKeyTyped
    }//GEN-LAST:event_cbHorarioKeyTyped

    private void cbHorarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbHorarioKeyPressed
    }//GEN-LAST:event_cbHorarioKeyPressed

    private void cbHorarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbHorarioItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbHorarioItemStateChanged

    private void cbHorarioCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_cbHorarioCaretPositionChanged
    }//GEN-LAST:event_cbHorarioCaretPositionChanged

    private void tfTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTelefoneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Winoows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new CadastrarUI(con).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btMenuPrincipal;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbHorario;
    private javax.swing.JComboBox cbMaquina;
    private javax.swing.JCheckBox chbPrioritario;
    private datechooser.beans.DateChooserCombo dcDataAgendamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpCampos;
    private javax.swing.JPanel jpPrincipal;
    private javax.swing.JLabel lbCPF;
    private javax.swing.JLabel lbData;
    private javax.swing.JLabel lbHorario;
    private javax.swing.JLabel lbHorarioIndisponivel;
    private javax.swing.JLabel lbMaquina;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbTelefone;
    private javax.swing.JTextField tfCPF;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfTelefone;
    private javax.swing.JTextField tfTime;
    // End of variables declaration//GEN-END:variables
    private static Connector con;
    private PlainDocument docCPF = new PlainDocument();
    private PlainDocument docTIME = new PlainDocument();
    private InputVerifier inpvCPF = new InputVerifier() {
        @Override
        public boolean verify(JComponent jc) {

            boolean eValido = false;

            char[] caracteres = tfCPF.getText().replace(".", "").replace("-", "").toCharArray();
            int[] digitos = new int[caracteres.length];
            int somaNove = 0, somaDez = 0;
            int digitoDez = 0, digitoOnze = 0;

            if (tfCPF.getText().equals("   .   .   -  ")) {
                return true;
            }

            if (caracteres.length == 0) {
                return true;
            }

            if (caracteres.length != 11) {
                return eValido;

            }

            for (int count = 0; count < caracteres.length; count++) {
                if (!Character.isDigit(caracteres[count])) {
                    return eValido;
                }
            }

            for (int count = 0; count < caracteres.length; count++) {
                digitos[count] = Character.getNumericValue(caracteres[count]);
                int valor = 0;
                if (count < 9) {
                    valor = digitos[count] * (11 - (count + 1));
                    somaNove += valor;
                }
            }

            digitoDez = 11 - (somaNove % 11);
            if (digitoDez > 9) {
                digitoDez = 0;
            }

            if (digitoDez != digitos[9]) {
                return eValido;
            }

            for (int count = 0; count < digitos.length; count++) {
                int valor = 0;
                if (count < 10) {
                    valor = digitos[count] * (12 - (count + 1));
                    somaDez += valor;
                }
            }

            digitoOnze = 11 - (somaDez % 11);
            if (digitoOnze > 9) {
                digitoOnze = 0;
            }

            if (digitoOnze != digitos[10]) {
                return eValido;
            }

            // Se passou por todos os testes o CPF é válido
            eValido = true;

            return eValido;
        }
    };

    public Agendamento getFormData() {

        Agendamento ag = new Agendamento();
        Controller ctrl = Controller.getInstance();
        Date dataMarcacao = new Date();

        ag.setCpf(tfCPF.getText());
        ag.setData(getDcDataAgendamento().getSelectedDate().getTime());
        ag.setHorario(getCbHorario().getSelectedItem().toString());
        ag.setNome(tfNome.getText());
        ag.setServidor(ctrl.frCadastrarUIgetSelectedServer(this));
        ag.setStatus('P');
        ag.setTelefone(tfTelefone.getText());
        ag.setDtmarcacao(dataMarcacao);
        ag.setHmarcacao(dataMarcacao);

        return ag;
    }

    public void setFormData() {

        Controller ctrl = Controller.getInstance();
        Calendar date = Calendar.getInstance();
        date.setTime(new Date());

        tfCPF.setText("");
        tfNome.setText("");
        tfTelefone.setText("");
        dcDataAgendamento.setSelectedDate(date);
        ctrl.frCadastrarUIupdateCbHorario(this);
        
    }

    /**
     * @return the cbMaquina
     */
    public javax.swing.JComboBox getCbMaquina() {
        return cbMaquina;
    }

    /**
     * @return the cbHorario
     */
    public javax.swing.JComboBox getCbHorario() {
        return cbHorario;
    }

    /**
     * @return the lbHorarioIndisponivel
     */
    public javax.swing.JLabel getLbHorarioIndisponivel() {
        return lbHorarioIndisponivel;
    }

    /**
     * @return the dcDataAgendamento
     */
    public datechooser.beans.DateChooserCombo getDcDataAgendamento() {
        return dcDataAgendamento;
    }

    /**
     * @return the chbPrioritario
     */
    public javax.swing.JCheckBox getChbPrioritario() {
        return chbPrioritario;
    }
}
